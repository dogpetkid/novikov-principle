<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>define anchors and colors</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// define anchors

htitle = 1/2*room_width;
vtitle = 1/4*room_height;

hanchor = 1/2*room_width;
vanchor = 1/2*room_height;


// define colors

c_normal = $808080;
c_clone = $8000b7;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>prepare clickboxes for menu elements</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// prepare clickboxes

draw_set_font(fnt_menu);

// Play (or Hub)
// points are relative
tplay = "Play";
x1play = hanchor - string_width(tplay)/2;
y1play = vanchor;
x2play = x1play + string_width(tplay);
y2play = y1play + string_height(tplay);

// Level Select
// points are relative
tlevel = "Level Select";
x1level = hanchor - string_width(tlevel)/2;
y1level = y1play + 1.5*string_height(tplay); // to be shifted under the play
x2level = x1level + string_width(tlevel);
y2level = y1level + string_height(tlevel);

// Options
// points are relative
toptions = "Options";
x1options = hanchor - string_width(toptions)/2;
y1options = y1level + 1.5*string_height(tlevel); // to be shifted under the Level Select
x2options = x1options + string_width(toptions);
y2options = y1options + string_height(toptions);


// Exit
texit = "Exit";
x1exit = hanchor - string_width(texit)/2;
y1exit = 0.85 * room_height;
x2exit = x1exit + string_width(texit);
y2exit = y1exit + string_height(texit);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Remove stairs memory</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// When traveling to the main menu, the location of the stairs should be forgotten
// this is so the player will spawn at the start of the level rather than at stairs

global.stairs = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>check for clicking on elements</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// check for clicking inside clickboxes

// scp_button_pressed(x1,y1,x2,y2);

// Play (or hub)
if (scp_button_pressed(x1play,y1play,x2play,y2play)) {
    
    // holding shift does the developer shortcut to the concept levels
    // (otherwise unaccessable)
    if (keyboard_check(vk_shift)) {
        room_goto(rm_concept_push);
    }
    /*
    // proceed to next room normally (in a majority of cases)
    else {
        room_goto(rm_tut0);
    }
    */
    // proceed to room that was last opened
    else {
        ini_open("save.ini");
        // if no last room was opened, goto first tutorial
        play_room = ini_read_real("levels","play",rm_tut0);
        ini_close();
        room_goto(play_room);
    }
    
}


// Level Select
if (scp_button_pressed(x1level,y1level,x2level,y2level)) {
    
    // move to level select room
    room_goto(rm_level_select);
    
}

// Options
if (scp_button_pressed(x1options,y1options,x2options,y2options)) {
    
    // move to options room
    room_goto(rm_options);
    
}

// Exit
if (scp_button_pressed(x1exit,y1exit,x2exit,y2exit)) {

    // exit game
    game_end();

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Open thanks</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// open nov.html only on first opening of the game
// (it can be reopened inside the options)
ini_open("save.ini");
// if not opened before
if (!ini_read_real("options","first",false)) {
    url_open(working_directory+"nov.html");
    ini_write_real("options","first",true);
}
ini_close();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Remember options</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// remember options

ini_open("save.ini");

// set fullscreen
window_set_fullscreen(ini_read_real("options","fullscreen",0));
// 0 means defaults to false (if not already set)

ini_close();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>create level list</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// provide a all "benchmark" levels for sections for all objects to use
global.tut = rm_tut0;
global.but = rm_tut4;
global.pp = rm_tut5;
global.ep = rm_puzzle6;
global.b2 = rm_tut8;
global.trp = rm_tut9;
global.shk = rm_tut10;
global.flr = rm_tut12A;

// provide a two dimentional array of "benchmarks"
// the first column is the level id
global.benchmarks[0,0] = global.tut;
global.benchmarks[1,0] = global.but;
global.benchmarks[2,0] = global.pp;
global.benchmarks[3,0] = global.ep;
global.benchmarks[4,0] = global.b2;
global.benchmarks[5,0] = global.trp;
global.benchmarks[6,0] = global.shk;
global.benchmarks[7,0] = global.flr
// and the second is the level name
global.benchmarks[0,1] = "tut";
global.benchmarks[1,1] = "but";
global.benchmarks[2,1] = "pp";
global.benchmarks[3,1] = "ep";
global.benchmarks[4,1] = "b2";
global.benchmarks[5,1] = "trp";
global.benchmarks[6,1] = "shk";
global.benchmarks[7,1] = "flr";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw title</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// draw title

draw_set_font(fnt_menu);
draw_set_halign(fa_center);


draw_text_colour(htitle,vtitle,"Novikov Principle",
// color it with the bottom right being purple
c_normal,c_normal,c_clone,c_normal,1);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw menu elements</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// draw menu elements

draw_set_font(fnt_menu);
draw_set_halign(fa_left);

//scp_render_button(x1,y1,x2,y2,text,c_hovered,c_normal)

// Play (or hub)
scp_render_button(x1play,y1play,x2play,y2play,tplay,c_clone,c_normal);

/*
// if mouse on button then light it up
if (point_in_rectangle(mouse_x,mouse_y,x1play,y1play,x2play,y2play))
    draw_set_colour(c_clone);
else
    draw_set_colour(c_normal);
draw_text(x1play,y1play,tplay);
*/


// Level select
scp_render_button(x1level,y1level,x2level,y2level,tlevel,c_clone,c_normal);

/*
// if mouse on button then light it up
if (point_in_rectangle(mouse_x,mouse_y,x1level,y1level,x2level,y2level))
    draw_set_colour(c_clone);
else
    draw_set_colour(c_normal);
draw_text(x1level,y1level,tlevel);
*/

// Options
scp_render_button(x1options,y1options,x2options,y2options,toptions,c_clone,c_normal);

scp_render_button(x1exit,y1exit,x2exit,y2exit,texit,c_clone,c_black);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
